# @format

name: k8s deployment
on:
  push:
    branches: main
jobs:
  pass-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: build frontend application for test coverage
        run: docker build -t hamzazahid/react-test -f ./client/Dockerfile.dev ./client
      - name: run frontend application for test coverage
        run: docker run hamzazahid/react-test npm test -- --coverage

  docker-image-build-push:
    needs: pass-test
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.time-tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: expose time tag
        id: time-tag
        run: echo "::set-output name=tag::$(date +%s)"
      - name: check time tag
        run: echo ${{ steps.time-tag.outputs.tag }}
      - name: Build client image and push to Docker Hub Container Registry
        uses: docker/build-push-action@v2
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./client/
          # Note: tags has to be all lower-case
          tags: |
            hamzazahid/multi-client:latest
            hamzazahid/multi-client:${{ steps.time-tag.outputs.tag }}
          # build on feature branches, push only on main branch
          push: ${{ github.ref == 'refs/heads/main' }}
      - name: Build server image and push to Docker Hub Container Registry
        uses: docker/build-push-action@v2
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./server/
          # Note: tags has to be all lower-case
          tags: |
            hamzazahid/multi-server:latest
            hamzazahid/multi-server:${{ steps.time-tag.outputs.tag }}
          # build on feature branches, push only on main branch
          push: ${{ github.ref == 'refs/heads/main' }}
      - name: Build worker image and push to Docker Hub Container Registry
        uses: docker/build-push-action@v2
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./worker/
          # Note: tags has to be all lower-case
          tags: |
            hamzazahid/multi-worker:latest
            hamzazahid/multi-worker:${{ steps.time-tag.outputs.tag }}
          # build on feature branches, push only on main branch
          push: ${{ github.ref == 'refs/heads/main' }}

  # test:
  #   runs-on: ubuntu-latest
  #   needs: docker-image-build-push
  #   env:
  #     tag: ${{ needs.docker-image-build-push.outputs.tag }}
  #     SHA: $(git rev-parse --short "$GITHUB_SHA")
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: check time tag same
  #       run: echo ${{ needs.docker-image-build-push.outputs.tag }} | grep -q ${{ env.tag }}
  #     - name: get git hash and branch
  #       run: echo $(git rev-parse --short "$GITHUB_SHA") ${{ env.SHA }}
  #     - name: get git branch
  #       run: echo ${{ github.ref == 'refs/heads/main' }}

  deploy-k8s:
    runs-on: self-hosted
    needs: docker-image-build-push
    env:
      tag: ${{ needs.docker-image-build-push.outputs.tag }}
    steps:
      - uses: actions/checkout@v2
      - name: check folders
        run: ls -la | less
      - name: print hello
        run: echo "Hello World!"
      - name: apply k8s changes
        run: kubectl apply -f ./k8s-dev/
      - name: set image on server deployments
        run: kubectl set image deployments/server-deployment server=hamzazahid/multi-server:${{ env.tag }}
      - name: set image on client deployments
        run: kubectl set image deployments/client-deployment client=hamzazahid/multi-client:${{ env.tag }}
      - name: set image on worker deployments
        run: kubectl set image deployments/worker-deployment worker=hamzazahid/multi-worker:${{ env.tag }}
